<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on The Python Corner</title><link>https://mastro35.github.io/tpc/tags/programming/</link><description>Recent content in Programming on The Python Corner</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Davide Mastromatteo</copyright><lastBuildDate>Tue, 22 Oct 2019 00:00:45 +0200</lastBuildDate><atom:link href="https://mastro35.github.io/tpc/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>The Detailed Guide on Sending Emails from your Python App</title><link>https://mastro35.github.io/tpc/posts/2019-10-22-the-detailed-guide-on-sending-emails-from-your-python-app/</link><pubDate>Tue, 22 Oct 2019 00:00:45 +0200</pubDate><guid>https://mastro35.github.io/tpc/posts/2019-10-22-the-detailed-guide-on-sending-emails-from-your-python-app/</guid><description>Hey there! Now you are reading a quick but detailed guide on adding the essential functionality to your web app built with Python: email sending. From this post, you will learn about the capabilities of the native Python modules for email sending and then get the practical steps for creating a message with images and attachments. With plenty of code examples, you will be able to craft and send your own emails using an SMTP server.</description></item><item><title>Working with Exception in Python</title><link>https://mastro35.github.io/tpc/posts/2017-01-10-working-with-exception-in-python/</link><pubDate>Tue, 10 Jan 2017 19:02:01 +0100</pubDate><guid>https://mastro35.github.io/tpc/posts/2017-01-10-working-with-exception-in-python/</guid><description>According to the official documentation, an exception is &amp;ldquo;an error detected during execution not unconditionally fatal&amp;rdquo;. Let&amp;rsquo;s start the interpreter and write:
1&amp;gt;&amp;gt;&amp;gt; 5/0 2Traceback (most recent call last): 3 File &amp;#34;&amp;lt;pyshell#7&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; 4 5/0 5ZeroDivisionError: division by zero As you can see we asked the interpreter to divide the number 5 by 0. Even if our request was syntactically correct when the interpreter tried to compute it, it &amp;ldquo;raised&amp;rdquo; the ZeroDivisionError exception to signal us that we asked something impossible.</description></item><item><title>Python Metaclasses</title><link>https://mastro35.github.io/tpc/posts/2016-12-22-python-metaclasses/</link><pubDate>Thu, 22 Dec 2016 12:31:01 +0100</pubDate><guid>https://mastro35.github.io/tpc/posts/2016-12-22-python-metaclasses/</guid><description>Working with Python means working with objects because, in Python, everything is an object. So, for example:
1&amp;gt;&amp;gt;&amp;gt; type(1) 2&amp;lt;class &amp;#39;int&amp;#39;&amp;gt; 3&amp;gt;&amp;gt;&amp;gt; type(&amp;#39;x&amp;#39;) 4&amp;lt;class &amp;#39;str&amp;#39;&amp;gt; As you can see, even basic types like integer and strings are objects, in particular, they are respectively instances of int and str classes. So, since everything is an object and given that an object is an instance of a class&amp;hellip; what is a class?</description></item></channel></rss>