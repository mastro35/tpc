<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>formattin strings on The Python Corner</title><link>https://mastro35.github.io/tpc/tags/formattin-strings/</link><description>Recent content in formattin strings on The Python Corner</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Davide Mastromatteo</copyright><lastBuildDate>Wed, 02 Dec 2020 22:09:35 +0100</lastBuildDate><atom:link href="https://mastro35.github.io/tpc/tags/formattin-strings/index.xml" rel="self" type="application/rss+xml"/><item><title>Formatting strings in Python: the easyway by using f-strings</title><link>https://mastro35.github.io/tpc/posts/2020-12-02-formatting-strings-in-python/</link><pubDate>Wed, 02 Dec 2020 22:09:35 +0100</pubDate><guid>https://mastro35.github.io/tpc/posts/2020-12-02-formatting-strings-in-python/</guid><description>Concatenating and formatting strings in Python is a trivial operation that almost any developer should be able to do, right? And yet, many devs keep using old stuff to format strings, like the % operator or the .format() method.
But that&amp;rsquo;s the last-century way to format strings! I mean&amp;hellip; the % method is something prehistoric that was used in Python 2 and the .format() method is so&amp;hellip; 2008&amp;hellip; :)
If you are using at least Python 3.</description></item></channel></rss>