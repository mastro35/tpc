<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lock on The Python Corner</title><link>https://mastro35.github.io/tpc/tags/lock/</link><description>Recent content in lock on The Python Corner</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Davide Mastromatteo</copyright><lastBuildDate>Thu, 27 Oct 2016 00:00:49 +0100</lastBuildDate><atom:link href="https://mastro35.github.io/tpc/tags/lock/index.xml" rel="self" type="application/rss+xml"/><item><title>How To Open a File in Python Without Locking It</title><link>https://mastro35.github.io/tpc/posts/2016-10-27-how-to-open-file-without-locking-it/</link><pubDate>Thu, 27 Oct 2016 00:00:49 +0100</pubDate><guid>https://mastro35.github.io/tpc/posts/2016-10-27-how-to-open-file-without-locking-it/</guid><description>When I use python I&amp;rsquo;m usually on Linux or macOS but last week I had to write a python script on Windows.
Yes, Windows! You know&amp;hellip; that place where slashes are misoriented, drives are named with a single alphabet letter and &amp;ldquo;tail&amp;rdquo; and &amp;ldquo;grep&amp;rdquo; commands are usually considered less important than &amp;ldquo;Clippy&amp;rdquo;.
{: .align-center}
However, working on windows I&amp;rsquo;ve discovered something I considered weird: opening a file on Windows with the open() method, actually locks the file and prevents it from deletion.</description></item></channel></rss>